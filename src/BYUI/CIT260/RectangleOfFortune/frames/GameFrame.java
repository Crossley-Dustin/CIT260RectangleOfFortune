package BYUI.CIT260.RectangleOfFortune.frames;

import BYUI.CIT260.RectangleOfFortune.Enums.GameMenuItems;
import BYUI.CIT260.RectangleOfFortune.exceptions.RectangleOfFortuneException;
import BYUI.CIT260.RectangleOfFortune.menu.controls.GameMenuControl;
import BYUI.CIT260.RectangleOfFortune.models.Game;
import BYUI.CIT260.RectangleOfFortune.models.Tile;
import BYUI.CIT260.RectangleOfFortune.views.GuessAConsonant;
import BYUI.CIT260.RectangleOfFortune.views.GuessAVowel;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Crossley Family
 */
public class GameFrame extends javax.swing.JFrame {
    Game game=null;
    GameMenuControl gameMenuControl=null;
    /**
     * Creates new form GameFrame
     */
    public GameFrame() {
        initComponents();
    }

    public GameFrame(Game game){
       this.game = game;
       this.gameMenuControl=new GameMenuControl(game);
       initComponents();
    }
    
    public void initializeForm() throws RectangleOfFortuneException{
        setGuessControlVisibility(false);
        setGuessVowelControlVisibility(false);
        this.jlPlayerTurn.setText(game.getCurrentPlayerName() + GameMenuItems.PLAYERTURN.getText());
        this.jTPuzzle.setText(game.displayPuzzle());
        this.jPlayerRankText.setText(this.gameMenuControl.showCurrentPlayerStanding(game.getPlayerList()));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpBody = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTGuess = new javax.swing.JTextArea();
        jbGuess = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jbSpin = new javax.swing.JButton();
        jbBuyVowel = new javax.swing.JButton();
        jbSolvePuzzle = new javax.swing.JButton();
        jbQuitGame = new javax.swing.JButton();
        jpPlayerTurnIndicator = new javax.swing.JPanel();
        jlPlayerTurn = new javax.swing.JLabel();
        jlPlayerRank = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPlayerRankText = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTWinValue = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTPuzzle = new javax.swing.JTextArea();
        jbGuessVowel = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTGuessVowel = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rectangle Of Fortune!");

        jpBody.setBackground(new java.awt.Color(102, 153, 255));

        jTGuess.setColumns(20);
        jTGuess.setRows(1);
        jScrollPane1.setViewportView(jTGuess);

        jbGuess.setText("Make Guess");
        jbGuess.setToolTipText("");
        jbGuess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuessActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jbSpin.setText("Spin");
        jbSpin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSpinActionPerformed(evt);
            }
        });

        jbBuyVowel.setText("Buy Vowel");
        jbBuyVowel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuyVowelActionPerformed(evt);
            }
        });

        jbSolvePuzzle.setText("Solve Puzzle");

        jbQuitGame.setText("Quit Game");
        jbQuitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuitGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbQuitGame, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbBuyVowel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbSpin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbSolvePuzzle, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbSpin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbBuyVowel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbSolvePuzzle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbQuitGame)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbBuyVowel, jbSolvePuzzle});

        jpPlayerTurnIndicator.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlPlayerTurn.setBackground(new java.awt.Color(153, 153, 255));
        jlPlayerTurn.setText("Player Turn Indicator");
        jlPlayerTurn.setToolTipText("");

        javax.swing.GroupLayout jpPlayerTurnIndicatorLayout = new javax.swing.GroupLayout(jpPlayerTurnIndicator);
        jpPlayerTurnIndicator.setLayout(jpPlayerTurnIndicatorLayout);
        jpPlayerTurnIndicatorLayout.setHorizontalGroup(
            jpPlayerTurnIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlayerTurnIndicatorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlPlayerTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jpPlayerTurnIndicatorLayout.setVerticalGroup(
            jpPlayerTurnIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPlayerTurnIndicatorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlPlayerTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jlPlayerRank.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlPlayerRank.setText("Player Rank");

        jPlayerRankText.setEditable(false);
        jPlayerRankText.setColumns(20);
        jPlayerRankText.setRows(3);
        jScrollPane2.setViewportView(jPlayerRankText);

        jTWinValue.setEditable(false);
        jTWinValue.setBackground(new java.awt.Color(153, 204, 255));
        jTWinValue.setColumns(20);
        jTWinValue.setLineWrap(true);
        jTWinValue.setRows(5);
        jTWinValue.setToolTipText("");
        jScrollPane3.setViewportView(jTWinValue);

        jTPuzzle.setEditable(false);
        jTPuzzle.setBackground(new java.awt.Color(204, 255, 204));
        jTPuzzle.setColumns(50);
        jTPuzzle.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jTPuzzle.setRows(1);
        jTPuzzle.setText("Puzzle Text Here");
        jTPuzzle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTPuzzle.setName(""); // NOI18N
        jScrollPane4.setViewportView(jTPuzzle);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jbGuessVowel.setText("Make Guess");
        jbGuessVowel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuessVowelActionPerformed(evt);
            }
        });

        jTGuessVowel.setColumns(20);
        jTGuessVowel.setRows(1);
        jScrollPane5.setViewportView(jTGuessVowel);

        javax.swing.GroupLayout jpBodyLayout = new javax.swing.GroupLayout(jpBody);
        jpBody.setLayout(jpBodyLayout);
        jpBodyLayout.setHorizontalGroup(
            jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBodyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpBodyLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addGroup(jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpBodyLayout.createSequentialGroup()
                                .addComponent(jbGuess)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jpPlayerTurnIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpBodyLayout.createSequentialGroup()
                                .addComponent(jbGuessVowel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlPlayerRank, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
            .addGroup(jpBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpBodyLayout.setVerticalGroup(
            jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addGroup(jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlPlayerRank, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBodyLayout.createSequentialGroup()
                            .addComponent(jpPlayerTurnIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addGroup(jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jbGuessVowel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jbGuess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbQuitGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbQuitGameActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbQuitGameActionPerformed

    private void jbSpinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSpinActionPerformed
        Tile spinValue = gameMenuControl.spin();
        this.jTWinValue.setText("Each letter is worth $" + spinValue.getName());
        setGuessControlVisibility(true);
    }//GEN-LAST:event_jbSpinActionPerformed

    private void jbGuessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuessActionPerformed
        char guessedLetter = jTGuess.getText().toUpperCase().charAt(0);
        GuessAConsonant guessAConsonant = new GuessAConsonant();
        boolean validLetter = guessAConsonant.getInput(guessedLetter);
        if(validLetter){
            int correctLetters = game.getPuzzle().countLetters(guessedLetter);
            if(correctLetters > 0){
                game.getCurrentPlayer().setPlayerRoundBank(game.getSpinner().getCurrentSpinValue().getValue(),correctLetters);           
                this.jTWinValue.setText("There are " + correctLetters + " " + guessedLetter + "'s. Your bank total is now: $" + game.getCurrentPlayer().getPlayerRoundBank());
                try {
                    this.initializeForm();
                } catch (RectangleOfFortuneException ex) {
                    Logger.getLogger(GameFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                game.changeCurrentPlayerTurn();
                this.jTWinValue.setText("Letter not found in puzzle or was already guessed!");
                try {
                    this.initializeForm();
                } catch (RectangleOfFortuneException ex) {
                    Logger.getLogger(GameFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jbGuessActionPerformed

    private void jbBuyVowelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuyVowelActionPerformed
        if(game.getCurrentPlayer().getPlayerRoundBank() >= 250){
            this.jTWinValue.setText("Please Guess a Vowel!");
            setGuessVowelControlVisibility(true);
        } else {
            this.jTWinValue.setText("Not enough money! It costs $250 to buy a vowel.");
        }
    }//GEN-LAST:event_jbBuyVowelActionPerformed

    private void jbGuessVowelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuessVowelActionPerformed
        char guessedLetter = jTGuessVowel.getText().toUpperCase().charAt(0);
        GuessAVowel guessAVowel = new GuessAVowel();
        boolean validLetter = guessAVowel.getInput(guessedLetter);
        if(validLetter){
            int correctLetters = game.getPuzzle().countLetters(guessedLetter);
            if(correctLetters > 0){
                game.getCurrentPlayer().setPlayerRoundBank(-250,1);           
                this.jTWinValue.setText("There are " + correctLetters + " " + guessedLetter + "'s. Your bank total is now: $" + game.getCurrentPlayer().getPlayerRoundBank());
                try {
                    this.initializeForm();
                } catch (RectangleOfFortuneException ex) {
                    Logger.getLogger(GameFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                game.changeCurrentPlayerTurn();
                this.jTWinValue.setText("Letter not found in puzzle or was already guessed!");
                try {
                    this.initializeForm();
                } catch (RectangleOfFortuneException ex) {
                    Logger.getLogger(GameFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jbGuessVowelActionPerformed

    private void setGuessControlVisibility(boolean visible){
        this.jbGuess.setEnabled(visible);
        this.jTGuess.setEnabled(visible);
    }
    
    private void setGuessVowelControlVisibility(boolean visible){
        this.jbGuessVowel.setEnabled(visible);
        this.jTGuessVowel.setEnabled(visible);
    }
    
    
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GameFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextArea jPlayerRankText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTGuess;
    private javax.swing.JTextArea jTGuessVowel;
    private javax.swing.JTextArea jTPuzzle;
    private javax.swing.JTextArea jTWinValue;
    private javax.swing.JButton jbBuyVowel;
    private javax.swing.JButton jbGuess;
    private javax.swing.JButton jbGuessVowel;
    private javax.swing.JButton jbQuitGame;
    private javax.swing.JButton jbSolvePuzzle;
    private javax.swing.JButton jbSpin;
    private javax.swing.JLabel jlPlayerRank;
    private javax.swing.JLabel jlPlayerTurn;
    private javax.swing.JPanel jpBody;
    private javax.swing.JPanel jpPlayerTurnIndicator;
    // End of variables declaration//GEN-END:variables
}
